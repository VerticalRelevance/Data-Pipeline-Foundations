{
  "Resources": {
    "PipelineRawZoneF31EFAB7": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        },
        "BucketName": "pipelinerawzone",
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "DataIngestion/PipelineRawZone/Resource"
      }
    },
    "PipelineLogGroup1CF6DEF2": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "PipelineLogGroup",
        "RetentionInDays": 731
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "DataIngestion/PipelineLogGroup/Resource"
      }
    },
    "PipelineLogGroupPipelineLogStream02E2D677": {
      "Type": "AWS::Logs::LogStream",
      "Properties": {
        "LogGroupName": {
          "Ref": "PipelineLogGroup1CF6DEF2"
        },
        "LogStreamName": "PipelineLogStream"
      },
      "DependsOn": [
        "PipelineLogGroup1CF6DEF2"
      ],
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "DataIngestion/PipelineLogGroup/PipelineLogStream/Resource"
      }
    },
    "PipelineStream": {
      "Type": "AWS::Kinesis::Stream",
      "Properties": {
        "Name": "PipelineStream",
        "RetentionPeriodHours": 168,
        "StreamEncryption": {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis"
        },
        "StreamModeDetails": {
          "StreamMode": "ON_DEMAND"
        }
      },
      "Metadata": {
        "aws:cdk:path": "DataIngestion/PipelineStream"
      }
    },
    "FirehoseRoleF2458667": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "Kinesis Role for Data Pipeline"
      },
      "Metadata": {
        "aws:cdk:path": "DataIngestion/Firehose Role/Resource"
      }
    },
    "FirehoseRoleDefaultPolicy26EC5F8A": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "PipelineRawZoneF31EFAB7",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "PipelineRawZoneF31EFAB7",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "kms:Decrypt",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "kinesis:DescribeStream",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "PipelineStream",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "FirehoseRoleDefaultPolicy26EC5F8A",
        "Roles": [
          {
            "Ref": "FirehoseRoleF2458667"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "DataIngestion/Firehose Role/DefaultPolicy/Resource"
      }
    },
    "PipelineFirehose": {
      "Type": "AWS::KinesisFirehose::DeliveryStream",
      "Properties": {
        "DeliveryStreamName": "PipelineFirehose",
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "PipelineRawZoneF31EFAB7",
              "Arn"
            ]
          },
          "BufferingHints": {
            "IntervalInSeconds": 60,
            "SizeInMBs": 64
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "PipelineLogGroup1CF6DEF2"
            },
            "LogStreamName": {
              "Ref": "PipelineLogGroupPipelineLogStream02E2D677"
            }
          },
          "DynamicPartitioningConfiguration": {
            "Enabled": true,
            "RetryOptions": {
              "DurationInSeconds": 300
            }
          },
          "ErrorOutputPrefix": "StreamingData/Error",
          "Prefix": "StreamingData/!{partitionKeyFromQuery:customer_id}",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "MetadataExtractionQuery",
                    "ParameterValue": "{customer_id:.customer_id}"
                  },
                  {
                    "ParameterName": "JsonParsingEngine",
                    "ParameterValue": "JQ-1.6"
                  }
                ],
                "Type": "MetadataExtraction"
              },
              {
                "Parameters": [
                  {
                    "ParameterName": "Delimiter",
                    "ParameterValue": "\\n"
                  }
                ],
                "Type": "AppendDelimiterToRecord"
              }
            ]
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "FirehoseRoleF2458667",
              "Arn"
            ]
          }
        },
        "KinesisStreamSourceConfiguration": {
          "KinesisStreamARN": {
            "Fn::GetAtt": [
              "PipelineStream",
              "Arn"
            ]
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "FirehoseRoleF2458667",
              "Arn"
            ]
          }
        }
      },
      "DependsOn": [
        "FirehoseRoleDefaultPolicy26EC5F8A",
        "FirehoseRoleF2458667",
        "PipelineLogGroupPipelineLogStream02E2D677",
        "PipelineRawZoneF31EFAB7",
        "PipelineStream"
      ],
      "Metadata": {
        "aws:cdk:path": "DataIngestion/PipelineFirehose"
      }
    },
    "DataPipelineVPCFF72F0A2": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "DataPipelineVPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "DataIngestion/DataPipelineVPC/Resource"
      }
    },
    "DataPipelineVPCDataPipelineVPCPublicSubnetSubnet1SubnetC93943AC": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "DataPipelineVPCFF72F0A2"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.0.0.0/17",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "DataPipelineVPCPublicSubnet"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "DataIngestion/DataPipelineVPC/DataPipelineVPCPublicSubnetSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "DataIngestion/DataPipelineVPC/DataPipelineVPCPublicSubnetSubnet1/Subnet"
      }
    },
    "DataPipelineVPCDataPipelineVPCPublicSubnetSubnet1RouteTableCD3B918B": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "DataPipelineVPCFF72F0A2"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "DataIngestion/DataPipelineVPC/DataPipelineVPCPublicSubnetSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "DataIngestion/DataPipelineVPC/DataPipelineVPCPublicSubnetSubnet1/RouteTable"
      }
    },
    "DataPipelineVPCDataPipelineVPCPublicSubnetSubnet1RouteTableAssociationC16DFB22": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "DataPipelineVPCDataPipelineVPCPublicSubnetSubnet1RouteTableCD3B918B"
        },
        "SubnetId": {
          "Ref": "DataPipelineVPCDataPipelineVPCPublicSubnetSubnet1SubnetC93943AC"
        }
      },
      "Metadata": {
        "aws:cdk:path": "DataIngestion/DataPipelineVPC/DataPipelineVPCPublicSubnetSubnet1/RouteTableAssociation"
      }
    },
    "DataPipelineVPCDataPipelineVPCPublicSubnetSubnet1DefaultRoute1FCA602A": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "DataPipelineVPCDataPipelineVPCPublicSubnetSubnet1RouteTableCD3B918B"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "DataPipelineVPCIGW490F72B2"
        }
      },
      "DependsOn": [
        "DataPipelineVPCVPCGWF3915F22"
      ],
      "Metadata": {
        "aws:cdk:path": "DataIngestion/DataPipelineVPC/DataPipelineVPCPublicSubnetSubnet1/DefaultRoute"
      }
    },
    "DataPipelineVPCDataPipelineVPCPublicSubnetSubnet2SubnetC9AEEB56": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "DataPipelineVPCFF72F0A2"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.0.128.0/17",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "DataPipelineVPCPublicSubnet"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "DataIngestion/DataPipelineVPC/DataPipelineVPCPublicSubnetSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "DataIngestion/DataPipelineVPC/DataPipelineVPCPublicSubnetSubnet2/Subnet"
      }
    },
    "DataPipelineVPCDataPipelineVPCPublicSubnetSubnet2RouteTable28DCA4B5": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "DataPipelineVPCFF72F0A2"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "DataIngestion/DataPipelineVPC/DataPipelineVPCPublicSubnetSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "DataIngestion/DataPipelineVPC/DataPipelineVPCPublicSubnetSubnet2/RouteTable"
      }
    },
    "DataPipelineVPCDataPipelineVPCPublicSubnetSubnet2RouteTableAssociationD9B05D3B": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "DataPipelineVPCDataPipelineVPCPublicSubnetSubnet2RouteTable28DCA4B5"
        },
        "SubnetId": {
          "Ref": "DataPipelineVPCDataPipelineVPCPublicSubnetSubnet2SubnetC9AEEB56"
        }
      },
      "Metadata": {
        "aws:cdk:path": "DataIngestion/DataPipelineVPC/DataPipelineVPCPublicSubnetSubnet2/RouteTableAssociation"
      }
    },
    "DataPipelineVPCDataPipelineVPCPublicSubnetSubnet2DefaultRoute87B14B80": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "DataPipelineVPCDataPipelineVPCPublicSubnetSubnet2RouteTable28DCA4B5"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "DataPipelineVPCIGW490F72B2"
        }
      },
      "DependsOn": [
        "DataPipelineVPCVPCGWF3915F22"
      ],
      "Metadata": {
        "aws:cdk:path": "DataIngestion/DataPipelineVPC/DataPipelineVPCPublicSubnetSubnet2/DefaultRoute"
      }
    },
    "DataPipelineVPCIGW490F72B2": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "DataPipelineVPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "DataIngestion/DataPipelineVPC/IGW"
      }
    },
    "DataPipelineVPCVPCGWF3915F22": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "DataPipelineVPCFF72F0A2"
        },
        "InternetGatewayId": {
          "Ref": "DataPipelineVPCIGW490F72B2"
        }
      },
      "Metadata": {
        "aws:cdk:path": "DataIngestion/DataPipelineVPC/VPCGW"
      }
    },
    "DataPipelineVPCSg8A4A3392": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Allow MYSQL Connection",
        "GroupName": "DataPipelineVPCAllowSQL",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:3306",
            "FromPort": 3306,
            "IpProtocol": "tcp",
            "ToPort": 3306
          }
        ],
        "VpcId": {
          "Ref": "DataPipelineVPCFF72F0A2"
        }
      },
      "Metadata": {
        "aws:cdk:path": "DataIngestion/DataPipelineVPCSg/Resource"
      }
    },
    "DataPipelineVPCSgfromDataIngestionDataPipelineVPCSg3FAC299AALLTRAFFICF851EC43": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "-1",
        "Description": "from DataIngestionDataPipelineVPCSg3FAC299A:ALL TRAFFIC",
        "GroupId": {
          "Fn::GetAtt": [
            "DataPipelineVPCSg8A4A3392",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "DataPipelineVPCSg8A4A3392",
            "GroupId"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "DataIngestion/DataPipelineVPCSg/from DataIngestionDataPipelineVPCSg3FAC299A:ALL TRAFFIC"
      }
    },
    "DataPipelineSubnetGroup": {
      "Type": "AWS::DMS::ReplicationSubnetGroup",
      "Properties": {
        "ReplicationSubnetGroupDescription": "DataPipelineSubnetGroup",
        "SubnetIds": [
          {
            "Ref": "DataPipelineVPCDataPipelineVPCPublicSubnetSubnet1SubnetC93943AC"
          },
          {
            "Ref": "DataPipelineVPCDataPipelineVPCPublicSubnetSubnet2SubnetC9AEEB56"
          }
        ],
        "ReplicationSubnetGroupIdentifier": "datapipelinesubnetgroup"
      },
      "DependsOn": [
        "DataPipelineVPCDataPipelineVPCPublicSubnetSubnet1DefaultRoute1FCA602A",
        "DataPipelineVPCDataPipelineVPCPublicSubnetSubnet1RouteTableCD3B918B",
        "DataPipelineVPCDataPipelineVPCPublicSubnetSubnet1RouteTableAssociationC16DFB22",
        "DataPipelineVPCDataPipelineVPCPublicSubnetSubnet1SubnetC93943AC",
        "DataPipelineVPCDataPipelineVPCPublicSubnetSubnet2DefaultRoute87B14B80",
        "DataPipelineVPCDataPipelineVPCPublicSubnetSubnet2RouteTable28DCA4B5",
        "DataPipelineVPCDataPipelineVPCPublicSubnetSubnet2RouteTableAssociationD9B05D3B",
        "DataPipelineVPCDataPipelineVPCPublicSubnetSubnet2SubnetC9AEEB56",
        "DataPipelineVPCIGW490F72B2",
        "DataPipelineVPCFF72F0A2",
        "DataPipelineVPCVPCGWF3915F22"
      ],
      "Metadata": {
        "aws:cdk:path": "DataIngestion/DataPipelineSubnetGroup"
      }
    },
    "PipelineReplicationInstance": {
      "Type": "AWS::DMS::ReplicationInstance",
      "Properties": {
        "ReplicationInstanceClass": "dms.t3.medium",
        "PubliclyAccessible": true,
        "ReplicationInstanceIdentifier": "PipelineReplicationInstance",
        "ReplicationSubnetGroupIdentifier": "datapipelinesubnetgroup",
        "ResourceIdentifier": "PipelineReplicationInstance",
        "VpcSecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "DataPipelineVPCSg8A4A3392",
              "GroupId"
            ]
          }
        ]
      },
      "DependsOn": [
        "DataPipelineSubnetGroup"
      ],
      "Metadata": {
        "aws:cdk:path": "DataIngestion/PipelineReplicationInstance"
      }
    },
    "SushiPipelineDMS13870316": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "dms.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "Role for DMS to access S3 raw zone bucket"
      },
      "Metadata": {
        "aws:cdk:path": "DataIngestion/SushiPipelineDMS/Resource"
      }
    },
    "SushiPipelineDMSDefaultPolicy91045126": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:DeleteObject",
                "s3:ListBucket",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "PipelineRawZoneF31EFAB7",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "PipelineRawZoneF31EFAB7",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "SushiPipelineDMSDefaultPolicy91045126",
        "Roles": [
          {
            "Ref": "SushiPipelineDMS13870316"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "DataIngestion/SushiPipelineDMS/DefaultPolicy/Resource"
      }
    },
    "SQLDatabase": {
      "Type": "AWS::DMS::Endpoint",
      "Properties": {
        "EndpointType": "source",
        "EngineName": "mysql",
        "EndpointIdentifier": "SQLDatabase",
        "Password": "{{resolve:secretsmanager:arn:aws:secretsmanager:us-west-1:899456967600:secret:SushiMYSQL1-Z742ps:SecretString:password::}}",
        "Port": 3306,
        "ServerName": "{{resolve:secretsmanager:arn:aws:secretsmanager:us-west-1:899456967600:secret:SushiMYSQL1-Z742ps:SecretString:host::}}",
        "Username": "{{resolve:secretsmanager:arn:aws:secretsmanager:us-west-1:899456967600:secret:SushiMYSQL1-Z742ps:SecretString:username::}}"
      },
      "Metadata": {
        "aws:cdk:path": "DataIngestion/SQLDatabase"
      }
    },
    "SushiPipelineLandingZoneEndpoint": {
      "Type": "AWS::DMS::Endpoint",
      "Properties": {
        "EndpointType": "target",
        "EngineName": "s3",
        "EndpointIdentifier": "SushiPipelineLandingZoneEndpoint",
        "S3Settings": {
          "AddColumnName": true,
          "BucketFolder": "BatchData",
          "BucketName": {
            "Ref": "PipelineRawZoneF31EFAB7"
          },
          "ServiceAccessRoleArn": {
            "Fn::GetAtt": [
              "SushiPipelineDMS13870316",
              "Arn"
            ]
          }
        }
      },
      "DependsOn": [
        "SushiPipelineDMSDefaultPolicy91045126",
        "SushiPipelineDMS13870316"
      ],
      "Metadata": {
        "aws:cdk:path": "DataIngestion/SushiPipelineLandingZoneEndpoint"
      }
    },
    "PipelineDMSTask": {
      "Type": "AWS::DMS::ReplicationTask",
      "Properties": {
        "MigrationType": "full-load",
        "ReplicationInstanceArn": {
          "Ref": "PipelineReplicationInstance"
        },
        "SourceEndpointArn": {
          "Ref": "SQLDatabase"
        },
        "TableMappings": "{ \"rules\": [ { \"rule-type\": \"selection\", \"rule-id\": \"1\", \"rule-name\": \"1\", \"object-locator\": { \"schema-name\": \"%\", \"table-name\": \"%\" }, \"rule-action\": \"include\" } ] }",
        "TargetEndpointArn": {
          "Ref": "SushiPipelineLandingZoneEndpoint"
        },
        "ReplicationTaskIdentifier": "PipelineDMSTask"
      },
      "DependsOn": [
        "SQLDatabase",
        "SushiPipelineLandingZoneEndpoint"
      ],
      "Metadata": {
        "aws:cdk:path": "DataIngestion/PipelineDMSTask"
      }
    },
    "SampleFlatFileBucket06465DE3": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        },
        "BucketName": "sampleflatfilebucket",
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        },
        "Tags": [
          {
            "Key": "aws-cdk:cr-owned:68555e62",
            "Value": "true"
          }
        ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "DataIngestion/SampleFlatFileBucket/Resource"
      }
    },
    "DeploymentAwsCliLayerB82B26A3": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "55f133baccc1d0e4666b88328d51a8c2ff354c919b8e0fa9f045123a19df1b4e.zip"
        },
        "Description": "/opt/awscli/aws"
      },
      "Metadata": {
        "aws:cdk:path": "DataIngestion/Deployment/AwsCliLayer/Resource",
        "aws:asset:path": "asset.55f133baccc1d0e4666b88328d51a8c2ff354c919b8e0fa9f045123a19df1b4e.zip",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Content"
      }
    },
    "DeploymentCustomResource47E8B2E6": {
      "Type": "Custom::CDKBucketDeployment",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
            "Arn"
          ]
        },
        "SourceBucketNames": [
          {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          }
        ],
        "SourceObjectKeys": [
          "f759d8ca95d3a058f603511b1a5ddf5c6a8a6c6e443e4041c3b9c31a45802abf.zip"
        ],
        "DestinationBucketName": {
          "Ref": "SampleFlatFileBucket06465DE3"
        },
        "Prune": true
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "DataIngestion/Deployment/CustomResource/Default"
      }
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "DataIngestion/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource"
      }
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetBucket*",
                "s3:GetObject*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                      }
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:Abort*",
                "s3:DeleteObject*",
                "s3:GetBucket*",
                "s3:GetObject*",
                "s3:List*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SampleFlatFileBucket06465DE3",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "SampleFlatFileBucket06465DE3",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "Roles": [
          {
            "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "DataIngestion/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "f98b78092dcdd31f5e6d47489beb5f804d4835ef86a8085d0a2053cb9ae711da.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
            "Arn"
          ]
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "DeploymentAwsCliLayerB82B26A3"
          }
        ],
        "Runtime": "python3.7",
        "Timeout": 900
      },
      "DependsOn": [
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
      ],
      "Metadata": {
        "aws:cdk:path": "DataIngestion/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource",
        "aws:asset:path": "asset.f98b78092dcdd31f5e6d47489beb5f804d4835ef86a8085d0a2053cb9ae711da",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "DataSyncZoneRole9A0EC141": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "datasync.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "Role for DataSync for Flat File Ingestion"
      },
      "Metadata": {
        "aws:cdk:path": "DataIngestion/DataSyncZoneRole/Resource"
      }
    },
    "DataSyncZoneRoleDefaultPolicyB8EEDE22": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:DeleteObject",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:GetObjectTagging",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:ListMultipartUploadParts",
                "s3:PutObject",
                "s3:PutObjectTagging"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "PipelineRawZoneF31EFAB7",
                    "Arn"
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "SampleFlatFileBucket06465DE3",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "PipelineRawZoneF31EFAB7",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "SampleFlatFileBucket06465DE3",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "DataSyncZoneRoleDefaultPolicyB8EEDE22",
        "Roles": [
          {
            "Ref": "DataSyncZoneRole9A0EC141"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "DataIngestion/DataSyncZoneRole/DefaultPolicy/Resource"
      }
    },
    "FileBucket": {
      "Type": "AWS::DataSync::LocationS3",
      "Properties": {
        "S3BucketArn": {
          "Fn::GetAtt": [
            "SampleFlatFileBucket06465DE3",
            "Arn"
          ]
        },
        "S3Config": {
          "BucketAccessRoleArn": {
            "Fn::GetAtt": [
              "DataSyncZoneRole9A0EC141",
              "Arn"
            ]
          }
        }
      },
      "DependsOn": [
        "DataSyncZoneRoleDefaultPolicyB8EEDE22",
        "DataSyncZoneRole9A0EC141"
      ],
      "Metadata": {
        "aws:cdk:path": "DataIngestion/FileBucket"
      }
    },
    "RawBucket": {
      "Type": "AWS::DataSync::LocationS3",
      "Properties": {
        "S3BucketArn": {
          "Fn::GetAtt": [
            "PipelineRawZoneF31EFAB7",
            "Arn"
          ]
        },
        "S3Config": {
          "BucketAccessRoleArn": {
            "Fn::GetAtt": [
              "DataSyncZoneRole9A0EC141",
              "Arn"
            ]
          }
        },
        "Subdirectory": "/FlatFiles"
      },
      "DependsOn": [
        "DataSyncZoneRoleDefaultPolicyB8EEDE22",
        "DataSyncZoneRole9A0EC141"
      ],
      "Metadata": {
        "aws:cdk:path": "DataIngestion/RawBucket"
      }
    },
    "FlatFileTask": {
      "Type": "AWS::DataSync::Task",
      "Properties": {
        "DestinationLocationArn": {
          "Fn::GetAtt": [
            "RawBucket",
            "LocationArn"
          ]
        },
        "SourceLocationArn": {
          "Fn::GetAtt": [
            "FileBucket",
            "LocationArn"
          ]
        },
        "Name": "FlatFileTask",
        "Options": {
          "TransferMode": "CHANGED"
        },
        "Schedule": {
          "ScheduleExpression": "cron(0 0 20/24 ? * * *)"
        }
      },
      "DependsOn": [
        "FileBucket",
        "RawBucket"
      ],
      "Metadata": {
        "aws:cdk:path": "DataIngestion/FlatFileTask"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/31Sy27bMBD8ltxptokv7dFR0sBADoYV+GpQ1EbeiiIN7rKGIOjfy4cqFz30tMPhLGe45JN8/C6/PqgbbXTbbww2cqpZ6V5E6jzRVk7PQffAovq0CyrlWRHMwriO5PTuujfvwjWJVhxBzR7UsLBlMYseLRCSjOyyj2qQ09EZSMpcD86gHtOyoLXrEz1cHEHqfgGDv8CPyymgn+R0uurUdTpU4hCa2FqHxpb0d3R0geFDNcWw8HduR+Q0KkZnV3ECe8vgo/JNMdzUuNgsqx3HoV0GsCxq0MEjj+tE/k/sbeeBaBbtECeZDOEac2f/Em3t+2tnb4mV1TnYq22vDi3/I/lQ1M+CtuepjaQbUzhZ3u5lJYQiAia5SyU+pxqaVuUY72oEfwJPaQ412s4AO/sjWJ0ns4Io/YPjHRQrGq0uJ7jlFtskynFmcQRywcfgxepsks05fjZtUO5uVBnMziInil+xi9aiCsRuWHvzRe+4crbFEuAw8sXZL1v5TT4+/CTEjQ+WcQB5LPU3gO4WOvECAAA="
      },
      "Metadata": {
        "aws:cdk:path": "DataIngestion/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}